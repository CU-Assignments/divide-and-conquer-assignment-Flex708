import java.util.HashSet;
import java.util.Set;

public class Solution {
    public String longestNiceSubstring(String s) {
        int maxLength = 0;
        String longest = "";
        int length = s.length();
        
        for (int i = 0; i < length; i++) {
            for (int j = i + 1; j <= length; j++) {
                String substr = s.substring(i, j);
                if (isNice(substr)) {
                    if (substr.length() > maxLength) {
                        maxLength = substr.length();
                        longest = substr;
                    }
                }
            }
        }
        return longest;
    }

    private boolean isNice(String s) {
        Set<Character> set = new HashSet<>();
        for (char c : s.toCharArray()) {
            set.add(c);
        }
        for (char c : s.toCharArray()) {
            if (!set.contains(Character.toUpperCase(c)) || !set.contains(Character.toLowerCase(c))) {
                return false;
            }
        }
        return true;
    }
}
